---
title: "Devoir final 1"
author: "DAVID Junior"
date: '2022-06-06'
output: word_document
---


Ce travail consiste a:
-utilisation des Aggregats monetaires de la BRH afin de proceder a la manipulation des donnees.

-Trier les colonnes a partir d'Octobre 1990 jusqu'a Octobre 2021. 

- supprimer  les lignes et colonnes qui ne sont pas necessaires.

- Selectionner certaines  variables : l'aggregat monetaire M3, le taux de change, Reserves nettes de change     (selon TMU)``


```{r, message=FALSE, warning=FALSE, echo=F }
library(tidyverse)
library(readxl)
library(tseries)
library(lmtest)



#################
# 1. Importation des donnees 
#################

# importation d'un fichier xls en ligne.

url1<-'https://www.brh.ht/wp-content/uploads/agregatsmon.xls'
p1f <- tempfile()
download.file(url1, p1f, mode="wb")
agregatsmon.data <-read_excel(path = p1f, skip = 2)


# head(agregatsmon.data) 
# tail(agregatsmon.data, n = 10)

# data cleaning
agregatsmon.data <- agregatsmon.data[1:517,] 

agregatsmon.data <- rename(agregatsmon.data, Date = ...1) 

agregatsmon.data <- agregatsmon.data[-1,] 


agregatsmon.data$Date <- as.numeric(agregatsmon.data$Date)
# conversion date format charactere -> numerique

#sum(is.na(agregatsmon.data$Date)) 
# 17 dates non formatees: 309-320, 360-364

agregatsmon.data$Date <- as.Date(agregatsmon.data$Date, 
                                 origin = "1899-12-30")
# conversion dates format nombre en correct format 
# en prenant 30 Decembre 1899 comme point de depart 


# Formattage des 17 dates manquantes

agregatsmon.data$Date[309] <- "2004-07-01"
agregatsmon.data$Date[310] <- "2004-08-01"
agregatsmon.data$Date[311] <- "2004-09-01"
agregatsmon.data$Date[312] <- "2004-10-01"
agregatsmon.data$Date[313] <- "2004-11-01"
agregatsmon.data$Date[314] <- "2004-12-01"
agregatsmon.data$Date[315] <- "2005-01-01"
agregatsmon.data$Date[316] <- "2005-02-01"
agregatsmon.data$Date[317] <- "2005-03-01"
agregatsmon.data$Date[318] <- "2005-04-01"
agregatsmon.data$Date[319] <- "2005-05-01"
agregatsmon.data$Date[320] <- "2005-06-01"

agregatsmon.data$Date[360] <- "2008-10-01"
agregatsmon.data$Date[361] <- "2008-11-01"
agregatsmon.data$Date[362] <- "2008-12-01"
agregatsmon.data$Date[363] <- "2009-01-01"
agregatsmon.data$Date[364] <- "2009-02-01"



###############
# 2.Nettoyer a partir d'Octobre 1990
#################

agregatsmon.data2 <- agregatsmon.data %>% 
  filter(Date >= "1990-10-01")

#head(agregatsmon.data2)

###############
# 3. Supprimer toutes les colonnes inutiles
###########

agregatsmon.data2 <- agregatsmon.data2[,-c(5,9,11,15,20,23,25,30,35,40,42,47,56,79,84)]

#head(agregatsmon.data2)

agregatsmon.data3 <- agregatsmon.data2[, c(7,8,36,37)]


agregatsmon.data3 <- agregatsmon.data3 %>% 
  rename(M3 = 'M3...8',
         taux_change = `TAUX DE CHANGE BRH`,
         reserves_depot = "Réserves nettes de changes BRH avec dépôts des BCMs (millions de  $)",
         reserves_systeme = "Réserves nettes de change du système banc.(millions de $)")

agregatsmon.data3 <- agregatsmon.data3 %>% 
  mutate(M3 = as.numeric(M3),
         taux_change = as.numeric(taux_change),
         reserves_depot = as.numeric(reserves_depot),
         reserves_systeme = as.numeric(reserves_systeme))

#head(agregatsmon.data3)


agregatsmon.data3$Date <- agregatsmon.data2$Date



```


- choisissons trois variables et vérifions si elles sont stationnaires en niveau ou en différence premiere ou deuxieme
- vérifions les sens de la causalité, au sens de Granger, entre ces trois variables
- réalisons une regression linéaire tenant compte des résultats des tests de causalité

# 1.A Choix des variables

- Taux de change
- M3
- Réserves nettes de change de la BRH avec dépots des BCMs


# 1.B Test de stationnarité ou Augmented Dickey-Fuller test

Source: https://www.statology.org/dickey-fuller-test-in-r/

```{r, message=F, warning=FALSE, echo=FALSE}

 ggplot(agregatsmon.data3, aes(x = Date, y = M3))+
   geom_line()+
  labs(title = " Aggregat monetaire M3",
       subtitle = "Periode: Octobre 1990 - Octobre 2021")
 
adf.test(agregatsmon.data3$M3)


```



```{r, message=F, warning=FALSE, echo=FALSE}
 ggplot(agregatsmon.data3, aes(x = Date, y = taux_change))+
   geom_line()+
   labs(title = " Le taux de change",
        y = "Taux de change",
        subtitle = "Periode: Octobre 1990 - Octobre 2021")

adf.test(agregatsmon.data3$taux_change)
 
```


```{r, message=F, warning=FALSE, echo=FALSE}

 
  ggplot(agregatsmon.data3, aes(x = Date, y = reserves_depot))+
   geom_line()+
   labs(title = " Les réserves nettes de changes BRH",
        y = "Reserves nettes avec depots des BCMs",
        subtitle = "Periode: Octobre 1990 - Octobre 2021")
  
adf.test(agregatsmon.data3$reserves_depot)
  
```

p-value > 5%,on accepte l'hypothese nulle de non-stationnarite des trois variables. Les variables sont donc non-stationnaires en niveau.

# 1.C Test de stationnarite en difference

source: https://bookdown.org/ccolonescu/RPoE4/time-series-nonstationarity.html

```{r, message=F, warning=F, echo=F}
a <- diff(agregatsmon.data3$M3)
plot(a, ylab = "M3")
adf.test(a, k=2)

b <- diff(agregatsmon.data3$taux_change)
plot(b, ylab = "taux de change")
adf.test(b, k=2)

c <- diff(agregatsmon.data3$reserves_depot)
plot(c, ylab = "reserves nettes avec depots BCMs")
adf.test(c, k=2)
```

Les p-value < 0.05. on rejette l'hypothese nulle de non-stationnarite en difference. Les trois variables sont donc stationnaires en difference premiere ou deuxieme.

# 2. Test de causalite, au sens de Granger

Source: https://www.r-bloggers.com/2021/11/granger-causality-test-in-r-with-example/


```{r, message=F, warning=F, echo=F}
grangertest(M3 ~ taux_change, data = agregatsmon.data3, order = 1)
grangertest(M3 ~ taux_change, data = agregatsmon.data3, order = 2)




```
Avec des p-value  = 0.05, on rejette l'hypothese nulle de non-causalite au sens de Granger.

```{r, message=F, warning=F, echo=F}
grangertest(reserves_depot ~ taux_change, 
            data = agregatsmon.data3, 
            order = 1)


grangertest(reserves_depot ~ taux_change, 
            data = agregatsmon.data3, 
            order = 2)

```
Avec des p-value > 0.05,On accepte l'hypothese nulle de non-causalite au sens de Granger
# 2.B Granger-causality Test in Reverse

```{r, message = F, warning=F, echo=F}
grangertest(taux_change ~ M3, 
            data = agregatsmon.data3, 
            order = 1)

grangertest(taux_change ~ M3, 
            data = agregatsmon.data3, 
            order = 2)
```
Avec des p-value < 0.05, on rejette l'hypothese nulle de non-causalite au sens de Granger. 
```{r, message=F, warning=F, echo=F}
grangertest(taux_change ~ reserves_depot, 
            data = agregatsmon.data3, 
            order = 1)

grangertest(taux_change ~ reserves_depot, 
            data = agregatsmon.data3, 
            order = 2)


```




# 3. Regression lineaire en fonction des tests de causalite

L'aggregat monetaire M3 est un excellent predicteur du taux de change, et inversement.etles reserves nettes avec depots des BCMs n'est un bon predicteur qu'avec un decalage d'ordre deuxieme de la serie temporelle. 


```{r, message=F, warning=F, echo=F}
rl <- lm(taux_change ~ M3, data = agregatsmon.data3)
summary(rl)$coef

```


taux de change estimee = 6.17 + 0.01 * M3

CONCLUSION: On peut donc constater que les variables choisies ont des relation de causalite positive l'une sur l'autre



